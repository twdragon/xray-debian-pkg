on:
    schedule:
        - cron: '30 15 * * 2,4,6'
    push:
        branches:
            - 'main'
defaults:
    run:
        shell: bash
env:
    UBUNTU_CODENAME: noble
jobs:
    version_analyzer:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        outputs:
            build_goxray_gui: ${{ steps.version_compare.outputs.goxray_gui }}
        steps:
            - name: Extract last version from Debian repository and store it in the GitHub CI environment variable
              run: |
                echo -e "# GoXRay-GUI Debian Package Builder CI Process \n\nBuild started: $(date +"%a, %d %b %Y %H:%M:%S %z")" >> ${GITHUB_STEP_SUMMARY}
                echo -e "Run ID: \`${GITHUB_RUN_NUMBER}\`" >> ${GITHUB_STEP_SUMMARY}
                echo -e "Workflow version: \`${GITHUB_WORKFLOW_SHA}\`" >> ${GITHUB_STEP_SUMMARY}
                echo -e "Trigger: \`${GITHUB_EVENT_NAME}\`" >> ${GITHUB_STEP_SUMMARY}
                echo -e "\n## Version analyzer\n" >> ${GITHUB_STEP_SUMMARY}
                echo 'Extracting version information from https://ppa.launchpadcontent.net/twdragon/xray/ubuntu/dists/noble/main/source/Sources.gz' >> ${GITHUB_STEP_SUMMARY}
                GOXRAY_GUI_VERSION_REPO='0.0.0'
                echo "GOXRAY_GUI_VERSION_REPO=${GOXRAY_GUI_VERSION_REPO}" >> ${GITHUB_ENV}
                echo -e "\`\`\`\nGOXRAY_GUI_VERSION_REPO=${GOXRAY_GUI_VERSION_REPO}" >> ${GITHUB_STEP_SUMMARY}
            - name: Clone GoXray-GUI
              uses: actions/checkout@v4
              with:
                submodules: 'true'
                fetch-depth: 0
                repository: 'goxray/desktop'
                path: 'goxray-gui'
            - name: Clone Debian maintaner scripts repository
              uses: actions/checkout@v4
              with:
                path: 'debian-scripts'
            - name: Extract last tagged version from Github repository and store it in the GitHub CI environment variable
              run: |
                echo -e "\nExtracting and analyzing annotated tags from Git repositories." >> ${GITHUB_STEP_SUMMARY}
                cd goxray-gui
                GOXRAY_GUI_VERSION=$(git describe --tags --abbrev=0 | grep -o -E '[0-9]+\.[0-9]+\.[0-9]+')
                echo "GOXRAY_GUI_VERSION=${GOXRAY_GUI_VERSION}" >> ${GITHUB_ENV}
                echo -e "\`\`\`\nGOXRAY_GUI_VERSION=${GOXRAY_GUI_VERSION}" >> ${GITHUB_STEP_SUMMARY}
            - name: Version comparison
              id: version_compare
              run: |
                if $(dpkg --compare-versions "${GOXRAY_GUI_VERSION}" "gt" "${GOXRAY_GUI_VERSION_REPO}")
                then
                    echo -e "\n - **GoXRay-GUI**: found a release version \`${GOXRAY_GUI_VERSION}\` > \`${GOXRAY_GUI_VERSION_REPO}\`, running build" >> ${GITHUB_STEP_SUMMARY}
                    echo "goxray_gui=true" >> "$GITHUB_OUTPUT"
                else
                    echo -e "\n - **GoXRay-GUI**: cannot found a release version, release sources for \`${GOXRAY_GUI_VERSION}\` will not be built" >> ${GITHUB_STEP_SUMMARY}
                    echo "goxray_gui=false" >> "$GITHUB_OUTPUT"
                fi
    build_goxray_gui:
        if: ${{ needs.version_analyzer.outputs.goxray_gui == 'true' }}
        runs-on: ubuntu-latest
        timeout-minutes: 15
        needs: version_analyzer
        env:
            build_goxray_gui: ${{ needs.version_analyzer.outputs.build_goxray_gui }}
        steps:
            - name: Install Debian helper software
              run: |
                sudo apt-get update
                sudo apt-get install -y debhelper curl gcc sed gawk dpkg-dev build-essential devscripts
                echo -e "\n## Building GoXRay-GUI\n\nInstalled Debian helper packages: \`debhelper curl gcc sed gawk dpkg-dev build-essential devscripts\`" >> ${GITHUB_STEP_SUMMARY}
            - name: Clone GoXRay-GUI
              uses: actions/checkout@v4
              with:
                submodules: 'true'
                fetch-depth: 0
                repository: 'goxray/desktop'
                path: 'goxray-gui'
            - name: Parse required Go version
              run: |
                cd goxray-gui
                git checkout $(git describe --tags --abbrev=0)
                GO_VERSION=$(grep -Po '(?<= GO_VERSION: )[0-9]+\.[0-9]+\..*$' go.mod)
                echo -e "GO_VERSION=${GO_VERSION}" >> ${GITHUB_ENV}
                echo -e "\nRequired Go version parsed from \`go.mod\`: \`${GO_VERSION}\`" >> ${GITHUB_STEP_SUMMARY}
                cd ..
            - name: Install Go compiler
              uses: actions/setup-go@v5
              with:
                go-version: ${{ env.GO_VERSION }}
            - name: Clone Debian maintaner scripts repository
              uses: actions/checkout@v4
              with:
                path: 'debian-scripts'
            - name: Clone Fyne Tools
              uses: actions/checkout@v4
              with:
                submodules: 'true'
                fetch-depth: 0
                repository: 'fyne-io/tools'
                path: 'tools'
            - name: Clone mkchangelog
              uses: actions/checkout@v4
              with:
                submodules: 'true'
                fetch-depth: 0
                repository: 'twdragon/mkchangelog'
                path: 'mkchangelog'
            - name: Compile GoXRay-GUI
              run: |
                cd goxray-gui
                go mod vendor
                mkdir debian
                cp -vr ../debian-scripts/goxray-desktop/* ./debian/
                cp -vr ../tools vendor/github.com/fyne-io/
                SHORT_GO_VERSION=$(echo -e "${{ env.GO_VERSION }}" | sed -e 's/\([0-9]\+\)\.\([0-9]\+\)\..*/\1.\2/')
                sed -i -e "s/golang-[0-9]\+\.[0-9]\+/golang-${SHORT_GO_VERSION}/" ./debian/control
                sed -i -e "s/\/go-[0-9]\+\.[0-9]\+/\/go-${SHORT_GO_VERSION}/" ./debian/rules
                chmod +x ./debian/rules
                LC_TIME=en_US.UTF-8 ../mkchangelog/mkchangelog debian/changelog ${{ env.UBUNTU_CODENAME }} goxray-gui "Stan B." godstanis@gmail.com "Stan B." low
                GOFLAGS="--mod=vendor" debuild -b -uc -us -d
                rm ./debian/changelog
                rm -rf ./vendor
                go mod vendor
                cp -vr ../tools vendor/github.com/fyne-io/
                LC_TIME=en_US.UTF-8 ../mkchangelog/mkchangelog debian/changelog ${{ env.UBUNTU_CODENAME }} goxray-gui "Stan B." godstanis@gmail.com "Stan B." low
                GOFLAGS="--mod=vendor" debuild -S -uc -us -d
                mkdir packages
                mv -v ../goxray-gui*.* packages/
                echo -e "GoXRay-GUI compiled in:\n\`\`\`" >> ${GITHUB_STEP_SUMMARY}
                ls -lh packages/ >> ${GITHUB_STEP_SUMMARY}
                echo -e "\`\`\`\n"
                cd ..

